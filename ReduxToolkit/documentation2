
______________________________________________________________________________________________

a. Redux toolkit Query
______________________________________________________________________________________________

- Uses Apis to do all the work
- reducerPath: Specifies the slice name in the Redux store where the API data will be stored.
- baseQuery: Defines the base URL for your API requests.
- endpoints: An object that defines all the API endpoints. Each endpoint is defined using builder.query
- hooks generated by Redux Toolkit Query for fetching data

code reference: Data.js

______________________________________________________________________________________________

b. Network Requests:
______________________________________________________________________________________________

-ade by a client-side application (such as a React.js app) to a server to fetch or send data.
- when you need to retrieve data from a server or send data to a server.
______________________________________________________________________________________________

c. HTTPS vs HTTP:
______________________________________________________________________________________________

- HTTPS protocol more secure: Encrypts data transferred between the client and the server, providing a secure connection.
______________________________________________________________________________________________

d. Using Fetch vs Axios
______________________________________________________________________________________________

> Fetch: 
- built-in browser API for making network requests. 
- lightweight and simple but lacks features like built-in request cancellation and handling JSON responses.
- 

> Axios: 
- A third-party library for making HTTP requests in JavaScript. 
- It offers features like request cancellation, interceptors, and built-in JSON parsing.

______________________________________________________________________________________________

e. Performing a GET, POST, PUT & DELETE Request:
______________________________________________________________________________________________

- GET: Retrieves data from the server.
- POST: Sends data to the server to create a new resource.
- PUT: Sends data to update an existing resource on the server.
- DELETE: Sends a request to remove a resource from the server.

______________________________________________________________________________________________

f. Debouncing, Cancel Token, and Abort Controllers:
______________________________________________________________________________________________

> bouncing: 
- A technique used to delay the execution of a function until after a certain time has passed without another invocation.
- Useful for performance optimization
- used for input fields or search bars.

> throtling 

> Cancel Token: 
- A token used to cancel an ongoing HTTP request. 
- Allows you to abort a request before it completes
- Prevent unnecessary network traffic and improve performance.

> Abort Controllers:
- A built-in browser API used to abort fetch requests. 
- It provides a way to cancel ongoing fetch requests programmatically.

______________________________________________________________________________________________

g. Combining RTK-Query with Redux Toolkit:
______________________________________________________________________________________________


